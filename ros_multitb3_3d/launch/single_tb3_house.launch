<launch>
  <arg name="model" default="waffle_pi" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="slam_methods" default="gmapping" doc="slam type [gmapping, cartographer, hector, karto, frontier_exploration]"/>
  <arg name="move_forward_only" default="false"/>
  <arg name="configuration_basename" default="turtlebot3_lds_2d.lua"/>
<!-- turtle bot declation -->
  <arg name='first_tb3' default="tb3_1"/>
  <!-- <arg name="first_tb3_x_pos" default=" 5.5"/>
  <arg name="first_tb3_y_pos" default=" 2.2"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 0.0"/> -->
  <arg name="first_tb3_x_pos" default=" 0.5"/>
  <arg name="first_tb3_y_pos" default=" 2.2"/>
  <arg name="first_tb3_z_pos" default=" 0.0"/>
  <arg name="first_tb3_yaw"   default=" 0.0"/>

<!-- launch gazebos from the data -->
<include file="$(find gazebo_ros)/launch/empty_world.launch">
  <!-- <arg name="world_name" value="$(find turtlebot3_gazebo)/worlds/turtlebot3_house.world"/> -->
  <arg name="world_name" value="$(find ros_3d_multitb3)/worlds/turtlebot3_house_mod3.world"/>
  <arg name="paused" value="false"/>
  <arg name="use_sim_time" value="true"/>
  <arg name="gui" value="false"/>
  <arg name="headless" value="false"/>
  <arg name="debug" value="false"/>
</include>  

<!-- spawn the robots and related information -->
<group ns = "/$(arg first_tb3)">
  <!-- <param name="robot_description" command="$(find xacro)/xacro -inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" /> -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find ros_3d_multitb3)/urdf/turtlebot3_$(arg model)_$(arg first_tb3).urdf.xacro" />

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="use_tf_static" type="bool" value="false" />
    <param name="tf_prefix" value="$(arg first_tb3)" />
    <!-- <remap from="points2" to="$(arg first_tb3)/velodyne_points" /> -->
  </node>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model $(arg first_tb3) 
  -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />
  

  <!-- include gmapping for the first turtle bot -->
  <!-- <include file="$(find turtlebot3_slam)/launch/turtlebot3_$(arg slam_methods).launch">
    <arg name="set_base_frame" value="$(arg first_tb3)/base_footprint"/>
    <arg name="set_odom_frame" value="$(arg first_tb3)/odom"/>
    <arg name="set_map_frame" value="$(arg first_tb3)/map"/>
    <arg name="configuration_basename" value="$(arg configuration_basename)"/>
  </include> -->

  <node pkg="octomap_server" type="octomap_server_node" name="octomap_server_to_map">
    <param name="frame_id" type="string" value="/map" />
    <param name="resolution" value="0.04" />
    <param name="base_frame_id" type="string" value="$(arg first_tb3)/base_footprint"/>
    <param name="sensor_model/max_range" value="6.0" />
    <param name="occupancy_min_z" value="0.12"/>
    <param name="occupancy_max_z" value="0.14" />
    <param name="min_x_size" value="20.0"/>
    <param name="min_y_size" value="20.0"/>
    <remap from="cloud_in" to="/$(arg first_tb3)/velodyne_points" />
    <remap from="projected_map" to="map" />
    <remap from="octomap_binary" to="dummy_binary"/>
    <remap from="octomap_full" to="dummy_full"/>
    <remap from="occupied_cells_vis_array" to="dummy_vis_array"/>
    <remap from="octomap_point_cloud_centers" to="dummy_pc_centers"/>
  </node>

  <node pkg="tf" type="static_transform_publisher" name="world_to_map_tf_broadcaster"  args="0 0 0 0 0 0 world map 20"/>
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom_tf_broadcaster"  args="0 0 0 0 0 0 map $(arg first_tb3)/odom 20"/>
  

<!--
  <node pkg="slam_toolbox" type="sync_slam_toolbox_node" name="slam_toolbox" output="screen">
    <rosparam command="load" file="$(find ros_3d_multitb3)/configuration/mapper_$(arg first_tb3).yaml" />
  </node>
-->

  <!-- include move base for the first turtle bot -->
  <include file="$(find ros_3d_multitb3)/launch/includes/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
    <arg name="cmd_vel_topic" value="/$(arg first_tb3)/cmd_vel"/>
    <arg name="namespace" value="$(arg first_tb3)"/>
  </include>
  <!-- include amcl for the first turtle bot -->
  <!-- <include file="$(find ros_3d_multitb3)/launch/includes/amcl.launch">
    <arg name="scan_topic" value="$(arg first_tb3)/scan"/>
    <arg name="global_frame_id" value="$(arg first_tb3)/map"/>
    <arg name="base_frame_id" value="$(arg first_tb3)/base_footprint"/>
    <arg name="odom_frame_id" value="$(arg first_tb3)/odom"/>
  </include> -->


</group>



<node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_tf_broadcaster"  args="0 0 0 0 0 0 /map /$(arg first_tb3)/map 100"/>

<!-- rviz -->
  <node pkg="rviz" type="rviz" name="rviz" required="true"
        args="-d $(find ros_3d_multitb3)/rviz/single_tb3_gmapping2.rviz"/>

</launch>
